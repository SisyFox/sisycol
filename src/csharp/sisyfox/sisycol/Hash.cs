// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace sisyfox.sisycol
{

using global::System;
using global::FlatBuffers;

public struct Hash : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Hash GetRootAsHash(ByteBuffer _bb) { return GetRootAsHash(_bb, new Hash()); }
  public static Hash GetRootAsHash(ByteBuffer _bb, Hash obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Hash __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte Value(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int ValueLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetValueBytes() { return __p.__vector_as_arraysegment(4); }

  public static Offset<Hash> CreateHash(FlatBufferBuilder builder,
      VectorOffset valueOffset = default(VectorOffset)) {
    builder.StartObject(1);
    Hash.AddValue(builder, valueOffset);
    return Hash.EndHash(builder);
  }

  public static void StartHash(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddValue(FlatBufferBuilder builder, VectorOffset valueOffset) { builder.AddOffset(0, valueOffset.Value, 0); }
  public static VectorOffset CreateValueVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static void StartValueVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<Hash> EndHash(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Hash>(o);
  }
};


}
