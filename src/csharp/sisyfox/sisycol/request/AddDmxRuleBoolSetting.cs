// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace sisyfox.sisycol.request
{

using global::System;
using global::FlatBuffers;

public struct AddDmxRuleBoolSetting : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AddDmxRuleBoolSetting GetRootAsAddDmxRuleBoolSetting(ByteBuffer _bb) { return GetRootAsAddDmxRuleBoolSetting(_bb, new AddDmxRuleBoolSetting()); }
  public static AddDmxRuleBoolSetting GetRootAsAddDmxRuleBoolSetting(ByteBuffer _bb, AddDmxRuleBoolSetting obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AddDmxRuleBoolSetting __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint DeviceId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SettingId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint ChannelId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint RuleId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public int On { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Off { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public byte Start { get { int o = __p.__offset(16); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public float Step { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<AddDmxRuleBoolSetting> CreateAddDmxRuleBoolSetting(FlatBufferBuilder builder,
      uint deviceId = 0,
      uint settingId = 0,
      uint channelId = 0,
      uint ruleId = 0,
      int on = 0,
      int off = 0,
      byte start = 0,
      float step = 0.0f) {
    builder.StartObject(8);
    AddDmxRuleBoolSetting.AddStep(builder, step);
    AddDmxRuleBoolSetting.AddOff(builder, off);
    AddDmxRuleBoolSetting.AddOn(builder, on);
    AddDmxRuleBoolSetting.AddRuleId(builder, ruleId);
    AddDmxRuleBoolSetting.AddChannelId(builder, channelId);
    AddDmxRuleBoolSetting.AddSettingId(builder, settingId);
    AddDmxRuleBoolSetting.AddDeviceId(builder, deviceId);
    AddDmxRuleBoolSetting.AddStart(builder, start);
    return AddDmxRuleBoolSetting.EndAddDmxRuleBoolSetting(builder);
  }

  public static void StartAddDmxRuleBoolSetting(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddDeviceId(FlatBufferBuilder builder, uint deviceId) { builder.AddUint(0, deviceId, 0); }
  public static void AddSettingId(FlatBufferBuilder builder, uint settingId) { builder.AddUint(1, settingId, 0); }
  public static void AddChannelId(FlatBufferBuilder builder, uint channelId) { builder.AddUint(2, channelId, 0); }
  public static void AddRuleId(FlatBufferBuilder builder, uint ruleId) { builder.AddUint(3, ruleId, 0); }
  public static void AddOn(FlatBufferBuilder builder, int on) { builder.AddInt(4, on, 0); }
  public static void AddOff(FlatBufferBuilder builder, int off) { builder.AddInt(5, off, 0); }
  public static void AddStart(FlatBufferBuilder builder, byte start) { builder.AddByte(6, start, 0); }
  public static void AddStep(FlatBufferBuilder builder, float step) { builder.AddFloat(7, step, 0.0f); }
  public static Offset<AddDmxRuleBoolSetting> EndAddDmxRuleBoolSetting(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AddDmxRuleBoolSetting>(o);
  }
};


}
