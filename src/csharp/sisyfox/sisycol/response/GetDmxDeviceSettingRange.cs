// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace sisyfox.sisycol.response
{

using global::System;
using global::FlatBuffers;

public struct GetDmxDeviceSettingRange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GetDmxDeviceSettingRange GetRootAsGetDmxDeviceSettingRange(ByteBuffer _bb) { return GetRootAsGetDmxDeviceSettingRange(_bb, new GetDmxDeviceSettingRange()); }
  public static GetDmxDeviceSettingRange GetRootAsGetDmxDeviceSettingRange(ByteBuffer _bb, GetDmxDeviceSettingRange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GetDmxDeviceSettingRange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint DeviceId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SettingId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public DmxDeviceSetting? Setting(int j) { int o = __p.__offset(8); return o != 0 ? (DmxDeviceSetting?)(new DmxDeviceSetting()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int SettingLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GetDmxDeviceSettingRange> CreateGetDmxDeviceSettingRange(FlatBufferBuilder builder,
      uint deviceId = 0,
      uint settingId = 0,
      VectorOffset settingOffset = default(VectorOffset)) {
    builder.StartObject(3);
    GetDmxDeviceSettingRange.AddSetting(builder, settingOffset);
    GetDmxDeviceSettingRange.AddSettingId(builder, settingId);
    GetDmxDeviceSettingRange.AddDeviceId(builder, deviceId);
    return GetDmxDeviceSettingRange.EndGetDmxDeviceSettingRange(builder);
  }

  public static void StartGetDmxDeviceSettingRange(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddDeviceId(FlatBufferBuilder builder, uint deviceId) { builder.AddUint(0, deviceId, 0); }
  public static void AddSettingId(FlatBufferBuilder builder, uint settingId) { builder.AddUint(1, settingId, 0); }
  public static void AddSetting(FlatBufferBuilder builder, VectorOffset settingOffset) { builder.AddOffset(2, settingOffset.Value, 0); }
  public static VectorOffset CreateSettingVector(FlatBufferBuilder builder, Offset<DmxDeviceSetting>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartSettingVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GetDmxDeviceSettingRange> EndGetDmxDeviceSettingRange(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GetDmxDeviceSettingRange>(o);
  }
};


}
