// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace sisyfox.sisycol.response
{

using global::System;
using global::FlatBuffers;

public struct CoinUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CoinUpdate GetRootAsCoinUpdate(ByteBuffer _bb) { return GetRootAsCoinUpdate(_bb, new CoinUpdate()); }
  public static CoinUpdate GetRootAsCoinUpdate(ByteBuffer _bb, CoinUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CoinUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Balance { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint RequiredBalance { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<CoinUpdate> CreateCoinUpdate(FlatBufferBuilder builder,
      uint balance = 0,
      uint requiredBalance = 0) {
    builder.StartObject(2);
    CoinUpdate.AddRequiredBalance(builder, requiredBalance);
    CoinUpdate.AddBalance(builder, balance);
    return CoinUpdate.EndCoinUpdate(builder);
  }

  public static void StartCoinUpdate(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddBalance(FlatBufferBuilder builder, uint balance) { builder.AddUint(0, balance, 0); }
  public static void AddRequiredBalance(FlatBufferBuilder builder, uint requiredBalance) { builder.AddUint(1, requiredBalance, 0); }
  public static Offset<CoinUpdate> EndCoinUpdate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CoinUpdate>(o);
  }
};


}
