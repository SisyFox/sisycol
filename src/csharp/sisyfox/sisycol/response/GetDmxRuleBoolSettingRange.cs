// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace sisyfox.sisycol.response
{

using global::System;
using global::FlatBuffers;

public struct GetDmxRuleBoolSettingRange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GetDmxRuleBoolSettingRange GetRootAsGetDmxRuleBoolSettingRange(ByteBuffer _bb) { return GetRootAsGetDmxRuleBoolSettingRange(_bb, new GetDmxRuleBoolSettingRange()); }
  public static GetDmxRuleBoolSettingRange GetRootAsGetDmxRuleBoolSettingRange(ByteBuffer _bb, GetDmxRuleBoolSettingRange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GetDmxRuleBoolSettingRange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint DeviceId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint SettingId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint RuleSettingId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public sisyfox.sisycol.DmxRuleBoolSetting? RuleSetting(int j) { int o = __p.__offset(10); return o != 0 ? (sisyfox.sisycol.DmxRuleBoolSetting?)(new sisyfox.sisycol.DmxRuleBoolSetting()).__assign(__p.__vector(o) + j * 28, __p.bb) : null; }
  public int RuleSettingLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GetDmxRuleBoolSettingRange> CreateGetDmxRuleBoolSettingRange(FlatBufferBuilder builder,
      uint deviceId = 0,
      uint settingId = 0,
      uint ruleSettingId = 0,
      VectorOffset ruleSettingOffset = default(VectorOffset)) {
    builder.StartObject(4);
    GetDmxRuleBoolSettingRange.AddRuleSetting(builder, ruleSettingOffset);
    GetDmxRuleBoolSettingRange.AddRuleSettingId(builder, ruleSettingId);
    GetDmxRuleBoolSettingRange.AddSettingId(builder, settingId);
    GetDmxRuleBoolSettingRange.AddDeviceId(builder, deviceId);
    return GetDmxRuleBoolSettingRange.EndGetDmxRuleBoolSettingRange(builder);
  }

  public static void StartGetDmxRuleBoolSettingRange(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddDeviceId(FlatBufferBuilder builder, uint deviceId) { builder.AddUint(0, deviceId, 0); }
  public static void AddSettingId(FlatBufferBuilder builder, uint settingId) { builder.AddUint(1, settingId, 0); }
  public static void AddRuleSettingId(FlatBufferBuilder builder, uint ruleSettingId) { builder.AddUint(2, ruleSettingId, 0); }
  public static void AddRuleSetting(FlatBufferBuilder builder, VectorOffset ruleSettingOffset) { builder.AddOffset(3, ruleSettingOffset.Value, 0); }
  public static void StartRuleSettingVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(28, numElems, 4); }
  public static Offset<GetDmxRuleBoolSettingRange> EndGetDmxRuleBoolSettingRange(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GetDmxRuleBoolSettingRange>(o);
  }
};


}
