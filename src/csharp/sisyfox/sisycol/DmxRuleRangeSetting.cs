// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace sisyfox.sisycol
{

using global::System;
using global::FlatBuffers;

public struct DmxRuleRangeSetting : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DmxRuleRangeSetting __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int StorageRef { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public uint Channel { get { return __p.bb.GetUint(__p.bb_pos + 4); } }
  public uint RuleNo { get { return __p.bb.GetUint(__p.bb_pos + 8); } }
  public float On { get { return __p.bb.GetFloat(__p.bb_pos + 12); } }
  public float Off { get { return __p.bb.GetFloat(__p.bb_pos + 16); } }
  public float Start { get { return __p.bb.GetFloat(__p.bb_pos + 20); } }
  public float Step { get { return __p.bb.GetFloat(__p.bb_pos + 24); } }

  public static Offset<DmxRuleRangeSetting> CreateDmxRuleRangeSetting(FlatBufferBuilder builder, int StorageRef, uint Channel, uint RuleNo, float On, float Off, float Start, float Step) {
    builder.Prep(4, 28);
    builder.PutFloat(Step);
    builder.PutFloat(Start);
    builder.PutFloat(Off);
    builder.PutFloat(On);
    builder.PutUint(RuleNo);
    builder.PutUint(Channel);
    builder.PutInt(StorageRef);
    return new Offset<DmxRuleRangeSetting>(builder.Offset);
  }
};


}
